from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from src.openai_client import achat

FACT_PROMPT = (
    "–ó–≥–µ–Ω–µ—Ä—É–π –æ–¥–∏–Ω —Ü—ñ–∫–∞–≤–∏–π, –Ω–µ–æ—á–µ–≤–∏–¥–Ω–∏–π —Ñ–∞–∫—Ç —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é (60‚Äì100 —Å–ª—ñ–≤). "
    "–°—Ç–∏–ª—å ‚Äî –¥—Ä—É–∂–Ω—ñ–π, –±–µ–∑ –Ω–æ–º–µ—Ä—ñ–≤ —ñ —Å–ø–∏—Å–∫—ñ–≤, –ª–∏—à–µ –∞–±–∑–∞—Ü. –¢–µ–º–∏: —ñ—Å—Ç–æ—Ä—ñ—è, –Ω–∞—É–∫–∞, –∫—É–ª—å—Ç—É—Ä–∞ –∞–±–æ –ø—Ä–∏—Ä–æ–¥–∞."
)

def random_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("–•–æ—á—É —â–µ —Ñ–∞–∫—Ç", callback_data="random_more")],
        [InlineKeyboardButton("–ó–∞–∫—ñ–Ω—á–∏—Ç–∏", callback_data="end_start")],
    ])

async def send_random_fact(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    try:
        with open("assets/random.jpg", "rb") as img:
            await update.message.reply_photo(photo=img, caption="–í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ–∞–∫—Ç üîé")
    except Exception:
        await update.message.reply_text("–í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ–∞–∫—Ç üîé")

    # –ó–∞–ø–∏—Ç –¥–æ ChatGPT —ñ–∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–º –ø—Ä–æ–º–ø—Ç–æ–º
    text = await achat([
        {"role": "system", "content": "–¢–∏ –¥–æ–±—Ä–æ–∑–∏—á–ª–∏–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫."},
        {"role": "user", "content": FACT_PROMPT},
    ])
    await update.message.reply_text(text, reply_markup=random_keyboard())

async def handle_random_callbacks(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    if query.data == "random_more":
        # –ø–æ–≤—Ç–æ—Ä—é—î–º–æ /random
        fake_update = Update(update.update_id, message=query.message)  # –Ω–µ–≤–µ–ª–∏–∫–∏–π —Ç—Ä—é–∫
        fake_update.message = query.message
        # –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ caption/message.from_user –¥–ª—è —É–∑–≥–æ–¥–∂–µ–Ω–æ—Å—Ç—ñ
        await query.message.reply_text("–©–µ –æ–¥–∏–Ω —Ñ–∞–∫—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é‚Ä¶")
        await send_random_fact(fake_update, context)
    elif query.data == "end_start":
        await query.message.reply_text("–ü–æ–≤–µ—Ä—Ç–∞—é—Å—è –≤ –ø–æ—á–∞—Ç–æ–∫. –ù–∞–ø–∏—à–∏ /start, —â–æ–± –∑–Ω–æ–≤—É –ø–æ—á–∞—Ç–∏.")
